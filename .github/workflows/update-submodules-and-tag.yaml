name: Update submodules and tag
on:
  workflow_call: {}
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  update:
    runs-on: [self-hosted, Linux, X64, trusted, docker]

    steps:
      - name: Checkout super-repo with submodules
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          submodules: recursive
          token: ${{ github.token }}

      - name: Configure git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Fast-forward submodules to tracked branches
        run: |
          set -euo pipefail
          git submodule foreach '
            branch=$(git config -f $toplevel/.gitmodules submodule.$name.branch || echo main);
            git fetch origin "$branch";
            git checkout "$branch" || git switch -C "$branch";
            git reset --hard "origin/$branch"
          '
          git add .
          if git diff --cached --quiet; then
            echo "NO_CHANGES=1" >> $GITHUB_ENV
          else
            git commit -m "chore(submodules): bump to latest"
          fi

      - name: Push commit
        if: env.NO_CHANGES != '1'
        run: git push origin HEAD

      - name: Create and push next semver tag (patch)
        if: env.NO_CHANGES != '1'
        run: |
          set -euo pipefail
          git fetch --tags origin

          LATEST=$(git tag --list 'v[0-9]*.[0-9]*.[0-9]*' --sort=-v:refname | head -n1)
          [ -z "$LATEST" ] && LATEST="v0.0.0"

          ver="${LATEST#v}"
          IFS='.' read -r MAJ MIN PAT <<<"$ver"
          NEXT="v${MAJ}.${MIN}.$((PAT+1))"

          while git rev-parse -q --verify "refs/tags/$NEXT" >/dev/null; do
            ver="${NEXT#v}"
            IFS='.' read -r MAJ MIN PAT <<<"$ver"
            NEXT="v${MAJ}.${MIN}.$((PAT+1))"
          done

          echo "Tagging $NEXT"
          git tag -a "$NEXT" -m "Submodules updated -> $NEXT"
          git push origin "$NEXT"
